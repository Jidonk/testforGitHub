【2018/12/16】
查看当前配置信息
git config --list

git获取帮助
git help <verb>
git <verb> help
man git -<verb>
例如 git help config

克隆远程仓库的时候，自定义本地仓库的名字，可以使用如下命令
git clone <url> <path>

忽略文件 .gitignore
在 .gitignore中添加如下内容
*.[ao]  #忽略所有 ".o" 和 ".a" 文件
*~		#忽略所有以 "~" 结尾的文件

所有空行或者以 ＃ 开头的行都会被 Git 忽略。
可以使用标准的 glob 模式匹配。匹配模式可以以(/)开头防止递归。
匹配模式可以以(/)结尾指定目录。
要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号(!)取反。

	
所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。 
星号(*)匹配零个或多个任意字符；[abc]匹配任何一个列在方
括号中的字符(这个例子要么匹配一个字符 a，要么匹配一个
字符 b，要么匹配一个字符 c)；问号(?)只匹配一个任意字符；
如果在方括号中使用短划线分隔两个字符，表示所有在这两个
字符范围内的都可以匹配(比如 [0-9] 表示匹配所有 0 到 9 的数字)。 
使用两个星号(*) 表示匹配任意中间目录，比如a/**/z 可以匹配 a/z, a/b/z 或 a/b/c/z等。

使用.gitignore的例子：
# no .a files
*.a

# but do track lib.a, even though you're ignoring .a files above
!lib.a

# only ignore the TODO file in the current directory, not subdir/TODO
/TODO

# ignore all files in the build/ directory
build/

# ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt

# ignore all .pdf files in the doc/ directory
doc/**/*.pdf


【2018/12/8】
将本地的代码仓库推送到远程仓库中（本地代码仓库在Work目录，远程代码仓库是Ubuntu_Work）
git init 
git config --global user.name "Your Name"
git config --global user.email "email@example.com"

以上步骤不需要
参考连接 http://www.runoob.com/git/git-remote-repo.html
git remote add origin xxx.xxx@xxx
git push origin master



【2018/10/4创建git仓库】
1、创建仓库
mkdir test_git
cd test_git
git init 
2、把文件提交的仓库
git add xxx
git commit -m "xxxx"

3、版本退回
git reset --hard HEAD^ 退回上一个版本
git reset --head HEAD~10从当前版本开始，往回退10个版本

git reflog 查看历史命令（用于查看commit_id）

4、工作区和暂存区
工作区：当前的工作目录
暂存区：使用git add命令时，将文件添加到暂存区中
当前分支：使用git commit命令时，将文件添加到当前分支
使用git status命令查看当前工作区的状态

5、分支创建与合并
git checkout -b dev 创建dev分支并切换到dev分支
上面的命令相当于下面的两条命令
git branch dev
git checkout dev

查看当前的分支
git branch
git merge dev 用于合并当前分支到指定分支
git branch -d dev 删除分支 



【在windows上安装git】
git config --global user.name "Your Name"
git config --global user.email "email@example.com"

设置机器的名字和邮件地址

